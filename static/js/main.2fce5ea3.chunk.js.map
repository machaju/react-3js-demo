{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","renderer","THREE","setSize","window","innerWidth","innerHeight","document","body","appendChild","domElement","camera","position","set","lookAt","scene","material","color","points","push","geometry","setFromPoints","line","add","render","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","getElementById","ReactDOM"],"mappings":"iOAKMA,E,uKACJ,WAGA,IAAMC,EAAW,IAAIC,IACrBD,EAASE,QAASC,OAAOC,WAAYD,OAAOE,aAC5CC,SAASC,KAAKC,YAAaR,EAASS,YAEpC,IAAMC,EAAS,IAAIT,IAAyB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KAC3FK,EAAOC,SAASC,IAAK,EAAG,EAAG,IAC3BF,EAAOG,OAAQ,EAAG,EAAG,GAGrB,IAAMC,EAAQ,IAAIb,IAGZc,EAAW,IAAId,IAAyB,CAAEe,MAAO,QAGjDC,EAAS,GACfA,EAAOC,KAAM,IAAIjB,KAAiB,GAAI,EAAG,IACzCgB,EAAOC,KAAM,IAAIjB,IAAe,EAAG,GAAI,IACvCgB,EAAOC,KAAM,IAAIjB,IAAe,GAAI,EAAG,IAEvC,IAAMkB,GAAW,IAAIlB,KAAuBmB,cAAeH,GAGrDI,EAAO,IAAIpB,IAAYkB,EAAUJ,GAGvCD,EAAMQ,IAAKD,GACXrB,EAASuB,OAAQT,EAAOJ,K,oBAexB,WACE,OACE,4B,GAhDYc,aAqDHzB,IC9CA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCURQ,EAAc5B,SAAS6B,eAAe,QAC5CC,IAASb,OAAO,cAAC,EAAD,IAASW,GAKzBT,M","file":"static/js/main.2fce5ea3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n\n  const renderer = new THREE.WebGLRenderer();\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  document.body.appendChild( renderer.domElement );\n\n  const camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\n  camera.position.set( 0, 0, 50 );\n  camera.lookAt( 0, 0, 0 );\n\n\n  const scene = new THREE.Scene();\n\n  //create a blue LineBasicMaterial\n  const material = new THREE.LineBasicMaterial( { color: 0x00ff00 } );\n\n\n  const points = [];\n  points.push( new THREE.Vector3( - 10, 0, 0 ) );\n  points.push( new THREE.Vector3( 0, 10, 0 ) );\n  points.push( new THREE.Vector3( 10, 0, 0 ) );\n\n  const geometry = new THREE.BufferGeometry().setFromPoints( points );\n\n\n  const line = new THREE.Line( geometry, material );\n\n\n  scene.add( line );\n  renderer.render( scene, camera );\n\n  // function animate(){\n  //   requestAnimationFrame( animate );\n\n  //   // required if controls.enableDamping or controls.autoRotate are set to true\n  //   controls.update();\n\n  //   renderer.render( scene, camera );\n  // }\n\n  };\n\n  // === THREE.JS EXAMPLE CODE END ===\n\n  render() {\n    return (\n      <div />\n    )\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// function formatName(user){\n//   return user.firstName + ' ' + user.lastName; \n// }\n\n// const user = {\n//   firstName: 'Julie',\n//   lastName: 'Machamer'\n// };\n\n// const element = (<h1>Hello, {formatName(user)}!!!</h1>);\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}